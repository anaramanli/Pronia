﻿
@{
	ViewData["Title"] = "Index";
}
@model IEnumerable<GetProductAdminVM>
<h5 class="card-title fw-semibold mb-4">Product</h5>
<a asp-action="Create" class="btn btn-outline-success m-1 float-end mb-2">Create</a>
<div class="table-responsive w-100">
	<table class="table table-bordered text-nowrap mb-0 align-middle">
		<thead class="text-dark fs-4">
			<tr>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Id</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Image</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Name</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Cost Price</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Sell Price</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Stock Count</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Discount</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Raiting</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">CreatedTime</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">UpdatedTime</h6>
				</th>
				<th class="border-bottom-0">
					<h6 class="fw-semibold mb-0">Action</h6>
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var data in Model)
			{
				<tr>
					<td class="border-bottom-0">
						@data.Id
					</td>
					<td class="border-bottom-0">
						<img src="~/@data.ImageUrl" width="50" />
					</td>
					<td class="border-bottom-0">
						@data.Name
					</td>
					<td class="border-bottom-0">
						@data.CostPrice
					</td>
					<td class="border-bottom-0">
						@data.SellPrice
					</td>
					<td class="border-bottom-0">
						@data.StockCount
					</td>
					<td class="border-bottom-0">
						@data.Discount
					</td>
					<td class="border-bottom-0">
						@data.Rating
					</td>
					<td class="border-bottom-0">
						@data.CreatedTime
					</td>
					<td class="border-bottom-0">
						@data.UpdatedTime
					</td>
					<td class="border-bottom-0">
						@data.Categories
					</td>
					<td class="border-bottom-0">
						<a asp-action="Update" asp-route-id="@data.Id" class="btn btn-warning">Edit</a>
						<a asp-action="Delete" asp-route-id="@data.Id" product-id="@data.Id" class="btn btn-danger delete">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
@section styles {
	<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
}
@section scripts {
	<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		Command:

		toastr.options = {
			"closeButton": false,
			"debug": false,
			"newestOnTop": false,
			"progressBar": true,
			"positionClass": "toast-top-right",
			"preventDuplicates": false,
			"onclick": null,
			"showDuration": "300",
			"hideDuration": "500",
			"timeOut": "2000",
			"extendedTimeOut": "1000",
			"showEasing": "swing",
			"hideEasing": "linear",
			"showMethod": "fadeIn",
			"hideMethod": "fadeOut"
		}
		let inputs = document.getElementsByClassName("change-visiblity");
		inputs.forEach(i => {
			i.addEventListener("change", () => {
				fetch("http://localhost:5014/Admin/Product/ChangeVisiblity/" + i.getAttribute("slider-id"))
					.then(res => {
						if (res.status == 200) {
							toastr["success"]("Status has been changed")
						}
						else {
							toastr["error"]("Oops")

						}
					})
					.catch(err => toastr["error"]("Oops"))
			});
		})
		let deleteBtns = document.querySelectorAll(".delete");

		deleteBtns.forEach(btn => {
			btn.addEventListener("click", (event) => {
				event.preventDefault();

				let productid = btn.getAttribute("product-id");

				Swal.fire({
					title: "Are you sure you want to delete?",
					text: "You won't be able to revert this!",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: "#d33",
					cancelButtonColor: "#3085d6",
					confirmButtonText: "Yes, delete it!"
				}).then((result) => {
					if (result.isConfirmed) {
						fetch(`/Admin/Product/Delete/${productid}`, {
							method: "Delete"
						})
							.then(response => {
								if (response.ok) {
									toastr["success"]("Slider deleted successfully");
									btn.closest("tr").remove();
								} else {
									toastr["error"]("Failed to delete slider");
								}
							})
							.catch(error => {
								console.error("Error:", error);
								toastr["error"]("An error occurred while deleting the slider");
							});
					}
				});
			});
		});


	</script>
}